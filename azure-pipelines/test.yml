variables: {
  NODE_14: '14.x',
  NODE_16: '16.x',
  NODE_18: '18.x'
}

pr:
  branches:
    include:
      - v3.x

trigger:
- v3.x

jobs:
- job: UnitTests
  strategy:
    matrix:
      UBUNTU_NODE14:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_14)
      UBUNTU_NODE16:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_16)
      UBUNTU_NODE18:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_18)
      WINDOWS_NODE14:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_14)
      WINDOWS_NODE16:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_16)
      WINDOWS_NODE18:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_18)
      MAC_NODE14:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_14)
      MAC_NODE16:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_16)
      MAC_NODE18:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_18)
  pool:
    vmImage: $(IMAGE_TYPE)
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js'
  - script: npm ci
    displayName: 'npm ci'
  - script: npm run build
    displayName: 'npm run build'
  - script: npm run lint
    displayName: 'npm run lint'
  - script: npm run updateVersion -- --validate
    displayName: 'validate version'
  - script: npm test
    displayName: 'Run unit tests'
  - task: PublishTestResults@2
    displayName: 'Publish Unit Test Results'
    inputs:
      testResultsFiles: 'test/unit-test-results.xml'
      testRunTitle: '$(Agent.JobName)'
    condition: succeededOrFailed()
