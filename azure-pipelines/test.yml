variables: {
  NODE_14: '14.x',
  NODE_16: '16.x'
}

pr:
  branches:
    include:
      - v3.x

trigger:
- v3.x

jobs:
- job: UnitTests
  strategy:
    matrix:
      UBUNTU_NODE14:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_14)
      UBUNTU_NODE16:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_16)
      WINDOWS_NODE14:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_14)
      WINDOWS_NODE16:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_16)
      MAC_NODE14:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_14)
      MAC_NODE16:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_16)
  pool:
    vmImage: $(IMAGE_TYPE)
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js'
  - script: npm ci
    displayName: 'npm ci'
  - script: npm run build
    displayName: 'npm run build'
  - script: npm run lint
    displayName: 'npm run lint'
  - script: npm test
    displayName: 'Run unit tests'
  - task: PublishTestResults@2
    displayName: 'Publish Unit Test Results'
    inputs:
      testResultsFiles: 'test/unit-test-results.xml'
      testRunTitle: '$(Agent.JobName)'
    condition: succeededOrFailed()

- job: E2ETests
  strategy:
    maxParallel: 1
    matrix:
      UBUNTU_NODE14:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_14)
      UBUNTU_NODE16:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_16)
      WINDOWS_NODE14:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_14)
      WINDOWS_NODE16:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_16)
      MAC_NODE14:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_14)
      MAC_NODE16:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_16)
  pool:
    vmImage: $(IMAGE_TYPE)
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js'
  - script: npm ci
    displayName: 'npm ci'
  - script: npm run build
    displayName: 'npm run build'
  - task: UseDotNet@2
    displayName: 'Install .NET 6'
    inputs:
      version: 6.0.x
  - pwsh: |
      .\setup-e2e-tests.ps1
    displayName: 'Setup e2e tests'
  - powershell: |
      .\run-e2e-tests.ps1
    displayName: 'Run e2e tests'
    env:
      AzureWebJobsStorage: $(AzureWebJobsStorage)
      AzureWebJobsEventHubSender: $(AzureWebJobsEventHubSender)
      AzureWebJobsCosmosDBConnectionString: $(AzureWebJobsCosmosDBConnectionString)
      FUNCTIONS_WORKER_RUNTIME: 'node'
      languageWorkers:node:workerDirectory: $(System.DefaultWorkingDirectory)
      nodeVersion: $(NODE_VERSION)
  - task: PublishTestResults@2
    displayName: 'Publish E2E Test Results'
    condition: always()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: '$(Agent.JobName)'
