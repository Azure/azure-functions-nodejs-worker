variables: {
  WORKER_VERSION: '4.0.0',
  NODE_14: '14.x',
  NODE_16: '16.x'
}
name: $(WORKER_VERSION)-$(Date:yyyyMMdd)$(Rev:.r)

pr:
  branches:
    include:
      - master
      - dev
      - v2.x
      - v4.x

trigger:
- master
- dev
- v2.x
- v4.x

jobs:
- job: UnitTests
  strategy:
    matrix:
      UBUNTU_NODE14:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_14)
      UBUNTU_NODE16:
        IMAGE_TYPE: 'ubuntu-latest'
        NODE_VERSION: $(NODE_16)
      WINDOWS_NODE14:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_14)
      WINDOWS_NODE16:
        IMAGE_TYPE: 'windows-latest'
        NODE_VERSION: $(NODE_16)
      MAC_NODE14:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_14)
      MAC_NODE16:
        IMAGE_TYPE: 'macOS-latest'
        NODE_VERSION: $(NODE_16)
  pool:
    vmImage: $(IMAGE_TYPE)
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js for test'
  - script: npm install -g request
    displayName: 'Workaround to https://github.com/grpc/grpc-node/issues/922'
  - script: npm install
    displayName: 'npm install'
  - script: npm run build
    displayName: 'npm run build'
  - script: npm test
    displayName: 'npm test'

- job: E2ETests
  strategy:
    maxParallel: 1
    matrix:
      NODE14:
        NODE_VERSION: $(NODE_14)
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js for test'
  - script: npm install -g request
    displayName: 'Workaround to https://github.com/grpc/grpc-node/issues/922'
  - script: npm install
    displayName: 'npm install'
  - script: npm run build
    displayName: 'npm run build'
  - pwsh: |
      .\setup-e2e-tests.ps1
    displayName: 'setup tests'
  - powershell: |
      .\run-e2e-tests.ps1
    displayName: 'run tests'
    env:
      AzureWebJobsStorage: $(AzureWebJobsStorage)
      AzureWebJobsEventHubSender: $(AzureWebJobsEventHubSender)
      AzureWebJobsCosmosDBConnectionString: $(AzureWebJobsCosmosDBConnectionString)
      FUNCTIONS_WORKER_RUNTIME: 'node'
      languageWorkers:node:workerDirectory: $(System.DefaultWorkingDirectory)
      nodeVersion: $(NODE_VERSION)
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      failTaskOnFailedTests: true

- job: BuildArtifacts  
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/v2.x'), eq(variables['UPLOADPACKAGETOPRERELEASEFEED'], true)))
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_14)
    displayName: 'Install Node.js for test'
  - powershell: .\package.ps1
  - task: NuGetCommand@2
    inputs:
      command: pack
      packagesToPack: '$(System.DefaultWorkingDirectory)\pkg'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
  - task: NuGetCommand@2
    condition: eq(variables['UPLOADPACKAGETOPRERELEASEFEED'], 'True')
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'e6a70c92-4128-439f-8012-382fe78d6396/f37f760c-aebd-443e-9714-ce725cd427df'
      allowPackageConflicts: true
    displayName: 'Push NuGet package to the AzureFunctionsPreRelease feed'